"""test

Revision ID: 6da392f10313
Revises: 
Create Date: 2025-03-04 09:04:55.627049

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6da392f10313'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('mentor',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expertise', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=True),
    sa.Column('links', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=True),
    sa.Column('links', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('creation_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mentorshiprequest',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('mentor_id', sa.Uuid(), nullable=False),
    sa.Column('admin_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('ACCEPTED', 'REJECTED', 'WAITING', name='request_status_enum'), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['mentor_id'], ['mentor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('student_id', sa.Uuid(), nullable=False),
    sa.Column('mentor_id', sa.Uuid(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('ACCEPTED', 'REJECTED', 'WAITING', name='requeststatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['mentor_id'], ['mentor.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id', 'student_id', 'mentor_id')
    )
    op.create_table('review',
    sa.Column('student_id', sa.Uuid(), nullable=False),
    sa.Column('mentor_id', sa.Uuid(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(length=1024), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['mentor_id'], ['mentor.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'mentor_id')
    )
    op.create_table('star',
    sa.Column('student_id', sa.Uuid(), nullable=False),
    sa.Column('mentor_id', sa.Uuid(), nullable=False),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['mentor_id'], ['mentor.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'mentor_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('star')
    op.drop_table('review')
    op.drop_table('request')
    op.drop_table('mentorshiprequest')
    op.drop_table('student')
    op.drop_table('mentor')
    op.drop_table('admin')
    # ### end Alembic commands ###
